{"version":3,"sources":["utils/constants.ts","redux/filterTicketsSlice.ts","redux/preloaderSlice.ts","utils/mainApi.ts","redux/ticketsSlice.ts","components/Checkbox/Checkbox.tsx","components/Container/Container.tsx","components/Filter/Filter.tsx","components/InputRadio/InputRadio.tsx","components/Tabs/Tabs.tsx","images/logo.svg","components/Header/Header.tsx","components/Main/Main.tsx","components/Column/Column.tsx","components/TicketsList/TicketsList.tsx","components/Cell/Cell.tsx","components/Row/Row.tsx","components/Ticket/Ticket.tsx","utils/getDepartureTime.ts","utils/getTime.ts","components/TicketCalculations/TicketCalculations.tsx","utils/getArrivalTime.ts","utils/getTransplantsString.ts","components/Button/Button.tsx","utils/getSortTickets.ts","components/Preloader/Preloader.tsx","components/App/App.tsx","utils/getFilterTickets.ts","reportWebVitals.ts","redux/rootReducer.ts","index.tsx"],"names":["checkboxesData","title","value","radioData","name","position","initialState","radio","checkboxes","map","el","filterTicketsSlice","createSlice","reducers","updataRadio","state","action","payload","markСheckbox","push","removeСheckbox","index","indexOf","splice","markAllCheckbox","removeAllСheckbox","actions","preloaderSlice","isShow","showPreloader","hidePreloader","api","config","url","this","fetch","method","then","_getResponseData","searchId","data","ok","json","Promise","reject","status","getTickets","createAsyncThunk","arg","thunkAPI","a","dispatch","res","errorCount","getSearchId","catch","err","console","log","getPackTickets","tickets","stop","concat","ticketsSlice","extraReducers","builder","addCase","fulfilled","Checkbox","handleChange","checkedСheckboxes","className","onChange","e","type","checked","length","Container","children","Filter","handleСheckbox","handleCheckboxAll","InputRadio","currentValue","tabIndex","Tabs","radioValue","handleRadio","Header","src","logo","alt","Main","Column","TicketsList","Cell","text","Row","isFirst","Ticket","price","carrier","segments","rowData","i","origin","destination","departureTime","arrivalTime","duration","transplants","stops","getDepartureTime","date","getHours","slice","getMinutes","getTime","Math","floor","TicketCalculations","calculatedData","useMemo","Date","setMinutes","join","number","Button","onClick","getTotalDuration","ticket","reduce","acc","cur","Preloader","App","useSelector","isShowPreloader","preloader","filterTickets","useState","numberTickets","setNumberTickets","sortedTickets","setSortedTickets","useDispatch","useEffect","sort","b","getSortTickets","filteredTickets","numder","every","includes","getFilterTickets","target","old","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71f9ee26.chunk.js","sourcesContent":["import { IRadioData, typeCheckboxesData } from '../types/types';\r\n\r\n// export enum enumCheckboxesData {\r\n//   'Без персадок' = 0,\r\n//   'Одна пересадка' = 1,\r\n//   'Две пересадка' = 2,\r\n//   'Три пересадка' = 3,\r\n// }\r\n\r\nexport const checkboxesData: typeCheckboxesData = [\r\n  {\r\n    title: 'Без пересадок',\r\n    value: '0',\r\n  },\r\n  {\r\n    title: '1 пересадка',\r\n    value: '1',\r\n  },\r\n  {\r\n    title: '2 пересадка',\r\n    value: '2',\r\n  },\r\n  {\r\n    title: '3 пересадка',\r\n    value: '3',\r\n  },\r\n];\r\n\r\nexport const radioData: IRadioData[] = [\r\n  {\r\n    name: 'cheap',\r\n    title: 'Самый дешевый',\r\n    position: 'l',\r\n  },\r\n  {\r\n    name: 'quick',\r\n    title: 'Самый быстрый',\r\n  },\r\n  {\r\n    name: 'optimal',\r\n    title: 'Оптимальный',\r\n    position: 'r',\r\n  },\r\n];\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { typeCheckedСheckboxes, typeRadioValue } from '../types/types';\r\nimport { checkboxesData } from '../utils/constants';\r\n\r\ninterface IinitialState {\r\n  radio: typeRadioValue;\r\n  checkboxes: typeCheckedСheckboxes;\r\n}\r\n\r\nconst initialState: IinitialState = {\r\n  radio: 'cheap',\r\n  checkboxes: checkboxesData.map((el) => el.value),\r\n};\r\n\r\nconst filterTicketsSlice = createSlice({\r\n  name: 'filterTickets',\r\n  initialState: initialState,\r\n  reducers: {\r\n    updataRadio(state, action) {\r\n      state.radio = action.payload;\r\n    },\r\n    markСheckbox(state, action) {\r\n      state.checkboxes.push(action.payload);\r\n    },\r\n    removeСheckbox(state, action) {\r\n      const index = state.checkboxes.indexOf(action.payload);\r\n      state.checkboxes.splice(index, 1);\r\n    },\r\n    markAllCheckbox(state) {\r\n      state.checkboxes = checkboxesData.map((el) => el.value);\r\n    },\r\n    removeAllСheckbox(state) {\r\n      state.checkboxes = [];\r\n    },\r\n  },\r\n});\r\nexport default filterTicketsSlice.reducer;\r\nexport const { updataRadio, markСheckbox, removeСheckbox, markAllCheckbox, removeAllСheckbox } =\r\n  filterTicketsSlice.actions;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\ninterface IinitialState {\r\n  isShow: boolean;\r\n}\r\n\r\nconst initialState: IinitialState = {\r\n  isShow: true,\r\n};\r\n\r\nconst preloaderSlice = createSlice({\r\n  name: 'preloaderSlice',\r\n  initialState: initialState,\r\n  reducers: {\r\n    showPreloader(state) {\r\n      state.isShow = true;\r\n    },\r\n    hidePreloader(state) {\r\n      state.isShow = false;\r\n    },\r\n  },\r\n});\r\nexport default preloaderSlice.reducer;\r\nexport const { showPreloader, hidePreloader } = preloaderSlice.actions;\r\n","interface IconfigApi {\n  url: string;\n}\n\nclass Api {\n  url: string;\n  constructor(config: IconfigApi) {\n    this.url = config.url;\n  }\n\n  getSearchId() {\n    return fetch(this.url + '/search', {\n      method: 'GET',\n    }).then(this._getResponseData);\n  }\n\n  getPackTickets(searchId: string) {\n    return fetch(`${this.url}/tickets?searchId=${searchId}`, {\n      method: 'GET',\n    }).then(this._getResponseData);\n  }\n\n  _getResponseData(data: any) {\n    if (!data.ok) {\n      return Promise.reject(`Ошибка: ${data.status}`);\n    }\n    return data.json();\n  }\n}\n\nconst configApi: IconfigApi = {\n  url: 'https://front-test.beta.aviasales.ru',\n};\n\nconst api = new Api(configApi);\n\nexport default api;\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Iticket } from '../types/types';\r\nimport { showPreloader, hidePreloader } from './preloaderSlice';\r\n\r\nimport api from '../utils/mainApi';\r\n\r\ninterface IinitialState {\r\n  tickets: Iticket[];\r\n}\r\n\r\nconst initialState: IinitialState = {\r\n  tickets: [],\r\n};\r\n\r\nexport const getTickets = createAsyncThunk('/tickets', async (arg, thunkAPI) => {\r\n  thunkAPI.dispatch(showPreloader());\r\n\r\n  let res: Iticket[] = [];\r\n  let errorCount: number = 0;\r\n  const { searchId } = await api.getSearchId().catch((err) => console.log(err));\r\n  while (errorCount < 7) {\r\n    try {\r\n      const { tickets, stop } = await api.getPackTickets(searchId).catch((err) => console.log(err));\r\n      res = res.concat(tickets);\r\n      if (stop) {\r\n        break;\r\n      }\r\n    } catch {\r\n      errorCount++;\r\n    }\r\n  }\r\n  thunkAPI.dispatch(hidePreloader());\r\n  return res;\r\n});\r\n\r\nconst ticketsSlice = createSlice({\r\n  name: 'filterTickets',\r\n  initialState: initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(getTickets.fulfilled, (state, action) => {\r\n      state.tickets = action.payload;\r\n    });\r\n  },\r\n});\r\n\r\nexport default ticketsSlice.reducer;\r\n","import React from 'react';\r\nimport { IoneСheckbox, typeCheckedСheckboxes, typefunctionChangeInput } from '../../types/types';\r\nimport { checkboxesData } from '../../utils/constants';\r\nimport './Checkbox.css';\r\n\r\ninterface CheckboxProps {\r\n  handleChange: typefunctionChangeInput;\r\n  data: IoneСheckbox;\r\n  checkedСheckboxes: typeCheckedСheckboxes;\r\n}\r\n\r\nconst Checkbox: React.FC<CheckboxProps> = ({ handleChange, data, checkedСheckboxes }) => {\r\n  return (\r\n    <label className=\"checkbox\">\r\n      <input\r\n        onChange={(e) => handleChange(e)}\r\n        className=\"checkbox__invisible\"\r\n        type=\"checkbox\"\r\n        checked={\r\n          checkedСheckboxes.indexOf(data.value) !== -1 ||\r\n          checkedСheckboxes.length === checkboxesData.length\r\n        }\r\n        value={data.value}\r\n      />\r\n      <span className=\"checkbox__visible\"></span>\r\n      {data.title}\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Checkbox;\r\n","import React from 'react';\r\nimport { ReactNode } from 'react';\r\nimport './Container.css';\r\n\r\ninterface IContainerProps {\r\n  children: ReactNode;\r\n}\r\n\r\nconst Container: React.FC<IContainerProps> = ({ children }) => {\r\n  return <div className=\"container\">{children}</div>;\r\n};\r\n\r\nexport default Container;\r\n","import React from 'react';\nimport Checkbox from '../Checkbox/Checkbox';\nimport Container from '../Container/Container';\nimport { checkboxesData } from '../../utils/constants';\nimport { typeCheckedСheckboxes, IoneСheckbox, typefunctionChangeInput } from '../../types/types';\n\nimport './Filter.css';\n\ninterface ItabsProps {\n  checkedСheckboxes: typeCheckedСheckboxes;\n  handleСheckbox: typefunctionChangeInput;\n  handleCheckboxAll: typefunctionChangeInput;\n}\nconst Filter: React.FC<ItabsProps> = ({ checkedСheckboxes, handleСheckbox, handleCheckboxAll }) => {\n  return (\n    <Container>\n      <aside className=\"filter\">\n        <p className=\"filter__title\">Количество пересадок</p>\n        <Checkbox\n          handleChange={handleCheckboxAll}\n          data={{ title: 'Все', value: '-1' }}\n          checkedСheckboxes={checkedСheckboxes}\n        />\n        {checkboxesData.map((data: IoneСheckbox) => (\n          <Checkbox\n            key={data.title}\n            handleChange={handleСheckbox}\n            data={data}\n            checkedСheckboxes={checkedСheckboxes}\n          />\n        ))}\n      </aside>\n    </Container>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\r\nimport { typefunctionChangeInput } from '../../types/types';\r\nimport './InputRadio.css';\r\n\r\ninterface IinputRadioProps {\r\n  currentValue: string;\r\n  name: string;\r\n  handleChange: typefunctionChangeInput;\r\n  title: string;\r\n  position?: 'l' | 'r';\r\n}\r\n\r\nconst InputRadio: React.FC<IinputRadioProps> = ({\r\n  currentValue,\r\n  handleChange,\r\n  name,\r\n  title,\r\n  position,\r\n}) => {\r\n  return (\r\n    <label className=\"input-radio\">\r\n      <input\r\n        onChange={(e) => handleChange(e)}\r\n        checked={currentValue === name}\r\n        className=\"input-radio__invisible\"\r\n        type=\"radio\"\r\n        name={name}\r\n        value={name}\r\n        tabIndex={1}\r\n      />\r\n      <span\r\n        className={`input-radio__visible  ${\r\n          position === 'l' && 'input-radio__invisible_position_left'\r\n        } \r\n      ${position === 'r' && 'input-radio__invisible_position_right'}`}\r\n      >\r\n        {title}\r\n      </span>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default InputRadio;\r\n","import React from 'react';\nimport InputRadio from '../InputRadio/InputRadio';\nimport { typefunctionChangeInput, typeRadioValue, IRadioData } from '../../types/types';\nimport { radioData } from '../../utils/constants';\nimport './Tabs.css';\n\ninterface ItabsProps {\n  radioValue: typeRadioValue;\n  handleRadio: typefunctionChangeInput;\n}\nconst Tabs: React.FC<ItabsProps> = ({ radioValue, handleRadio }) => {\n  return (\n    <div className=\"tabs\">\n      {radioData.map((data: IRadioData) => (\n        <InputRadio\n          key={data.name}\n          handleChange={handleRadio}\n          name={data.name}\n          currentValue={radioValue}\n          title={data.title}\n          position={data.position}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Tabs;\n","export default __webpack_public_path__ + \"static/media/logo.309a1b5d.svg\";","import React from 'react';\r\nimport logo from '../../images/logo.svg';\r\nimport './Header.css';\r\n\r\nconst Header: React.FC = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <img className=\"header__logo\" src={logo} alt=\"Логотип.\" />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { ReactNode } from 'react';\r\nimport './Main.css';\r\n\r\ninterface IMainProps {\r\n  children: ReactNode;\r\n}\r\n\r\nconst Main: React.FC<IMainProps> = ({ children }) => {\r\n  return <main className=\"main\">{children}</main>;\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport { ReactNode } from 'react';\r\nimport './Column.css';\r\n\r\ninterface IColumnProps {\r\n  children: ReactNode;\r\n}\r\n\r\nconst Column: React.FC<IColumnProps> = ({ children }) => {\r\n  return <div className=\"column\">{children}</div>;\r\n};\r\n\r\nexport default Column;\r\n","import React from 'react';\r\nimport { ReactNode } from 'react';\r\nimport './TicketsList.css';\r\n\r\ninterface ITicketsListProps {\r\n  children: ReactNode;\r\n}\r\n\r\nconst TicketsList: React.FC<ITicketsListProps> = ({ children }) => {\r\n  return <ul className=\"tickets-list\">{children}</ul>;\r\n};\r\n\r\nexport default TicketsList;\r\n","import React from 'react';\r\nimport './Cell.css';\r\n\r\ninterface CellProps {\r\n  title: string;\r\n  text: string;\r\n}\r\n\r\nconst Cell: React.FC<CellProps> = ({ title, text }) => {\r\n  return (\r\n    <div className=\"cell\">\r\n      <p className=\"cell__title\">{title}</p>\r\n      {text && <p className=\"cell__text\">{text}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cell;\r\n","import React, { ReactNode } from 'react';\r\nimport './Row.css';\r\n\r\ninterface RowProps {\r\n  isFirst?: boolean;\r\n  children: ReactNode;\r\n}\r\n\r\nconst Row: React.FC<RowProps> = ({ isFirst, children }) => {\r\n  return <div className={`row ${isFirst && 'row_first'}`}>{children}</div>;\r\n};\r\n\r\nexport default Row;\r\n","import React from 'react';\r\nimport Cell from '../Cell/Cell';\r\nimport Row from '../Row/Row';\r\nimport { IticketProps, IsegmentsProps } from '../../types/types';\r\nimport './Ticket.css';\r\n\r\nconst Ticket = ({ data: { price, carrier, segments } }: IticketProps) => {\r\n  return (\r\n    <li className=\"ticket\">\r\n      <Row isFirst={true}>\r\n        <p className=\"ticket__price\">{price} Р</p>\r\n        <img\r\n          className=\"ticket__logo\"\r\n          src={`https://pics.avs.io/99/36/${carrier}.png`}\r\n          alt=\"Логотип авиакомпании.\"\r\n        />\r\n      </Row>\r\n      {segments.map((rowData: IsegmentsProps, i: number) => (\r\n        <Row key={i}>\r\n          <Cell\r\n            title={rowData.origin + '-' + rowData.destination}\r\n            text={rowData.departureTime + '-' + rowData.arrivalTime}\r\n          />\r\n          <Cell title=\"В пути\" text={rowData.duration} />\r\n          <Cell title={rowData.transplants} text={rowData.stops} />\r\n        </Row>\r\n      ))}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Ticket;\r\n","export function getDepartureTime(date: Date): string {\r\n  return ('0' + date.getHours()).slice(-2) + ':' + ('0' + date.getMinutes()).slice(-2);\r\n}\r\n","export function getTime(duration: number): string {\r\n  if (duration < 60) return duration + 'м';\r\n  if (duration < 1440) {\r\n    return Math.floor(duration / 60) + 'ч ' + (duration % 60) + 'м';\r\n  }\r\n  return (\r\n    Math.floor(duration / 1440) +\r\n    'д ' +\r\n    Math.floor((duration % 1440) / 60) +\r\n    'ч ' +\r\n    (duration % 60) +\r\n    'м'\r\n  );\r\n}\r\n","import React, { useMemo } from 'react';\r\nimport Ticket from '../Ticket/Ticket';\r\nimport Container from '../Container/Container';\r\nimport { getArrivalTime } from '../../utils/getArrivalTime';\r\nimport { getDepartureTime } from '../../utils/getDepartureTime';\r\nimport { getTime } from '../../utils/getTime';\r\nimport { getTransplantsString } from '../../utils/getTransplantsString';\r\nimport { Iticket } from '../../types/types';\r\n\r\ninterface IticketCalculationsProps {\r\n  data: Iticket;\r\n}\r\n\r\nconst TicketCalculations = ({ data: { price, carrier, segments } }: IticketCalculationsProps) => {\r\n  const calculatedData = useMemo(() => {\r\n    return {\r\n      price: price,\r\n      carrier: carrier,\r\n      segments: segments.map((data) => {\r\n        return {\r\n          origin: data.origin,\r\n          destination: data.destination,\r\n          departureTime: getDepartureTime(new Date(data.date)),\r\n          arrivalTime: getArrivalTime(new Date(data.date), data.duration),\r\n          stops: data.stops.join(','),\r\n          transplants: getTransplantsString(data.stops.length),\r\n          duration: getTime(data.duration),\r\n        };\r\n      }),\r\n    };\r\n  }, [carrier, price, segments]);\r\n\r\n  return (\r\n    <Container>\r\n      <Ticket data={calculatedData} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TicketCalculations;\r\n","import { getDepartureTime } from './getDepartureTime';\r\n\r\nexport function getArrivalTime(date: Date, duration: number): string {\r\n  date.setMinutes(date.getMinutes() + duration);\r\n  return getDepartureTime(date);\r\n}\r\n","export function getTransplantsString(number: number): string {\r\n  if (number === 0) {\r\n    return '0 пересадок';\r\n  } else if (number === 1) {\r\n    return '1 пересадка';\r\n  } else if (number < 5) {\r\n    return number + ' пересадки';\r\n  }\r\n  return number + ' пересадок';\r\n}\r\n","import React from 'react';\r\nimport { ReactNode } from 'react';\r\nimport './Button.css';\r\n\r\ninterface IButtonProps {\r\n  title: string;\r\n  isShow: boolean;\r\n  onClick: () => void;\r\n}\r\n\r\nconst Button: React.FC<IButtonProps> = ({ title, onClick, isShow }) => {\r\n  return (\r\n    <button onClick={onClick} className={`btn ${isShow && 'btn_show'}`}>\r\n      {title}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import { Iticket, typeRadioValue } from '../types/types';\r\n\r\nexport function getSortTickets(ticket: Iticket[], radioValue: typeRadioValue): Iticket[] {\r\n  switch (radioValue) {\r\n    case 'cheap':\r\n      return [...ticket].sort((a: Iticket, b: Iticket) => a.price - b.price);\r\n\r\n    case 'quick':\r\n      return [...ticket].sort(\r\n        (a: Iticket, b: Iticket) => getTotalDuration(a) - getTotalDuration(b)\r\n      );\r\n    case 'optimal':\r\n      return [...ticket].sort((a: Iticket, b: Iticket) => {\r\n        const coefficient = 4;\r\n        return (\r\n          a.price +\r\n          getTotalDuration(a) * coefficient -\r\n          (b.price + getTotalDuration(b) * coefficient)\r\n        );\r\n      });\r\n\r\n    default:\r\n      return ticket;\r\n  }\r\n}\r\n\r\nfunction getTotalDuration(ticket: Iticket): number {\r\n  return ticket.segments.reduce((acc: any, cur: any) => acc + cur.duration, 0);\r\n}\r\n","import React from 'react';\r\nimport './Preloader.css';\r\n\r\ninterface ItabsProps {\r\n  isShow: boolean;\r\n}\r\n\r\nconst Preloader: React.FC<ItabsProps> = ({ isShow }) => {\r\n  return (\r\n    <div className={`preloader ${isShow && 'preloader_show'}`}>\r\n      <div className=\"preloader__container\">\r\n        <span className=\"preloader__round\"></span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preloader;\r\n","import React, { useEffect, useState, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../redux/rootReducer';\nimport {\n  updataRadio,\n  markСheckbox,\n  removeСheckbox,\n  markAllCheckbox,\n  removeAllСheckbox,\n} from '../../redux/filterTicketsSlice';\nimport { getTickets } from '../../redux/ticketsSlice';\nimport Filter from '../Filter/Filter';\nimport Tabs from '../Tabs/Tabs';\nimport Header from '../Header/Header';\nimport Main from '../Main/Main';\nimport Column from '../Column/Column';\nimport TicketsList from '../TicketsList/TicketsList';\nimport TicketCalculations from '../TicketCalculations/TicketCalculations';\nimport Button from '../Button/Button';\nimport { getFilterTickets } from '../../utils/getFilterTickets';\nimport { getSortTickets } from '../../utils/getSortTickets';\nimport { typeRadioValue, typeCheckedСheckboxes, Iticket } from '../../types/types';\nimport { checkboxesData } from '../../utils/constants';\nimport './App.css';\nimport Preloader from '../Preloader/Preloader';\nfunction App() {\n  const tickets: Iticket[] = useSelector((state: RootState) => state.tickets.tickets);\n  const isShowPreloader: boolean = useSelector((state: RootState) => state.preloader.isShow);\n\n  const radioValue: typeRadioValue = useSelector((state: RootState) => state.filterTickets.radio);\n\n  const checkedСheckboxes: typeCheckedСheckboxes = useSelector(\n    (state: RootState) => state.filterTickets.checkboxes\n  );\n  const [numberTickets, setNumberTickets] = useState<number>(5);\n  const [sortedTickets, setSortedTickets] = useState<Iticket[]>([]);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setSortedTickets(getSortTickets(tickets, radioValue));\n  }, [tickets, radioValue]);\n\n  const filteredTickets: Iticket[] = useMemo(() => {\n    return getFilterTickets(sortedTickets, checkedСheckboxes, numberTickets);\n  }, [sortedTickets, checkedСheckboxes, numberTickets]);\n\n  function handleRadio(e: React.ChangeEvent<HTMLInputElement>): void {\n    dispatch(updataRadio(e.target.value));\n  }\n\n  function handleСheckbox(e: React.ChangeEvent<HTMLInputElement>): void {\n    const { checked, value } = e.target;\n    if (checked) {\n      dispatch(markСheckbox(value));\n    } else {\n      dispatch(removeСheckbox(value));\n    }\n  }\n\n  function handleCheckboxAll(e: React.ChangeEvent<HTMLInputElement>): void {\n    if (checkedСheckboxes.length < checkboxesData.length) {\n      dispatch(markAllCheckbox());\n    } else {\n      dispatch(removeAllСheckbox());\n    }\n  }\n\n  function increaseNumberTickets() {\n    setNumberTickets((old) => old + 5);\n  }\n\n  useEffect(() => {\n    dispatch(getTickets());\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <Header />\n      <Main>\n        <Filter\n          checkedСheckboxes={checkedСheckboxes}\n          handleСheckbox={handleСheckbox}\n          handleCheckboxAll={handleCheckboxAll}\n        />\n        <Column>\n          <Tabs radioValue={radioValue} handleRadio={handleRadio} />\n          <TicketsList>\n            {filteredTickets.map((data: Iticket, i: number) => {\n              return <TicketCalculations data={data} key={i} />;\n            })}\n            <Preloader isShow={isShowPreloader} />\n          </TicketsList>\n          <Button\n            onClick={increaseNumberTickets}\n            isShow={!isShowPreloader}\n            title=\"Показать еще 5 билетов!\"\n          />\n        </Column>\n      </Main>\n    </div>\n  );\n}\n\nexport default App;\n","import { Iticket, typeCheckedСheckboxes } from '../types/types';\r\n\r\nexport function getFilterTickets(\r\n  ticket: Iticket[],\r\n  checkedСheckboxes: typeCheckedСheckboxes,\r\n  numder: number\r\n): Iticket[] {\r\n  if (ticket.length === 0) {\r\n    return ticket;\r\n  } else {\r\n    const res: Iticket[] = [];\r\n\r\n    for (let i = 0; res.length < numder && i < ticket.length; i++) {\r\n      if (\r\n        ticket[i].segments.every((el: any) => {\r\n          return checkedСheckboxes.includes('' + el.stops.length);\r\n        })\r\n      ) {\r\n        res.push(ticket[i]);\r\n      }\r\n    }\r\n    return res;\r\n  }\r\n}\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers, configureStore } from '@reduxjs/toolkit';\r\nimport { useDispatch } from 'react-redux';\r\nimport filterTicketsSlice from './filterTicketsSlice';\r\nimport preloaderSlice from './preloaderSlice';\r\nimport ticketsSlice from './ticketsSlice';\r\n\r\nexport const rootReducer = combineReducers({\r\n  filterTickets: filterTicketsSlice,\r\n  tickets: ticketsSlice,\r\n  preloader: preloaderSlice,\r\n});\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\n\r\ntype AppDispatch = typeof store.dispatch;\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport { Provider } from 'react-redux';\nimport reportWebVitals from './reportWebVitals';\nimport { store } from './redux/rootReducer';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}